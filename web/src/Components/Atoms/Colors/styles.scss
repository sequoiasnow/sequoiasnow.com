/**
 * All colors that will be used in the project.
 */
$colors--all: (
  default: tomato,
  green: rgb(39, 174, 96),
  blue: rgb(52, 152, 219),
  purple: rgb(155, 89, 182),
  yellow: rgb(241, 196, 15),
  orange: rgb(243, 156, 18),
  red: rgb(232, 37, 73),
  blackish: rgb(51, 51, 51),
  dark-gray: rgb(74, 74, 74),
  grey: rgb(155, 155, 155),
  light-gray: rgb(216, 216, 216),
  whiteish: rgb(245, 245, 245),
  white: rgb(255, 255, 255),
);

/** PLANETARY COLORS */
$colors--planets: (
  mars: (
    lightest: #f4e9d6,
    light: #efb63d,
    default: #fe845d,
    dark: #e93232,
    darkest: #020202,
    alt: #9d2160,
  ),
  ceres: (
    lightest: #fdfcfa,
    light: #cbd7e2,
    default: #456073,
    dark: #202833, 
    darkest: #0b0a0f,
    alt: #202f4c,
  ),
  jupiter: (
    lightest: #cebbd3,
    light: #f7a4b8,
    default: #74569f,
    dark: #143131, 
    darkest: #220d14,
    alt: #42baa5
  ),
  enclaudus: (
    lightest: #e8efe8,
    light: #c8e6e1,
    default: #e93232,
    dark: #9a2361, 
    darkest: #020202,
    alt: #1b669b
  ), 
);

/** 
 * There is such thing as a planetary colorsheme, or at least I made somthing along those 
 * lines up. Thus we get colors for the various planets, the selected planet is given as 
 * $color--planet.
 */
$colors--planet: map-get($colors--planets, mars);

/**
 * The colors for a variety of regions that can be defined.
 */
$colors--theme: (
  selected: map-get($colors--planet, 'default'),
  'content-bg': map-get($colors--all, white),
  content: map-get($colors--all, 'white'),
  bg: rgba(map-get($colors--planet, 'lightest'), 0.3),
  tags: map-get($colors--planet, 'default'),
  text: map-get($colors--planet, 'darkest'),
  primary: map-get($colors--planet, 'default'),
);

/**
 * Keeps track of all colors for a category. Usually these correspond to some planets.
 */
$colors--category: (
  physics: map-get($colors--planets, 'mars'),
  math: map-get($colors--planets, 'enclaudus'),
  web: map-get($colors--planets, 'ceres'),
  programming: map-get($colors--planets, 'jupiter'),
  default: $colors--planet
);

/** 
 * The primary color for the site, this is not universal, but show's up
 * in things like tables and headings.
 * 
 * @color
 */
$color--primary: map-get($colors--planet, default); 

/**
 * The nested color map used by everything.
 */
$colors: (
  theme: $colors--theme,
  planets: $colors--planets,
  planet: $colors--planet,
  category: $colors--category,
  all: $colors--all,
  default: $color--primary
);

/**
 * @function
 * @description
 *   The color funciton provides the accessor method to the entire colorsheme. 
 *   If no second argument is provided, it will pull colors from the colors-all 
 *   or colors--planet lists. 
 * @param $map    region, mars, planet, all
 * @param $color  The name of the color to be used.
 */
@function color($one: false, $two: false, $three: false) {
  @if ($one and $two and $three) {
    @warn("Arguments are #{$one} #{$two} #{$three}");
    @return map-get(map-get(map-get($colors, $one), $two), $three);
  } @elseif ($one and $two) {
    $res: map-get(map-get($colors, $one), $two);
    @if ( type-of($res) == 'map' ) {
      @return map-get($res, 'default');
    }
    @return $res;
  } @elseif ( $one ) {
    $res: map-get($colors, $one);
    @if ( $res and type-of($res) == 'map' ) {
      @return map-get($res, default);
    }
    @return map-get(map-get($colors, all), $one);
  } @else {
    @return map-get($colors, 'default');
  }
}
